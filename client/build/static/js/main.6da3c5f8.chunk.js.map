{"version":3,"sources":["logo.svg","components/Header/Header.js","redux/Portfolio/portfolioAction.js","img/ethereum.svg","img/bitcoin.svg","img/cardano.svg","screens/Dashboard/Dashboard.js","services/history.js","services/routes.js","redux/Portfolio/portfolioReducer.js","redux/reducer.js","redux/Portfolio/portfolioSagas.js","redux/sagas.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","PORTFOLIO_ACTION","formatter","Intl","NumberFormat","style","currency","connect","state","portfolio","dispatch","getPortfolio","type","loadingPortfolio","useEffect","_getUnit","ticker","includes","moment","timestamp","format","networth","holdings","map","asset","index","src","bitcoin","ethereum","cardano","marginRight","name","total","value","price","length","paddingRight","paddingLeft","history","createBrowserHistory","Routes","path","component","DashboardPage","initial_portfolio","stocks_portfolio","cryptocurrencies","etf","initialState","rootReducer","combineReducers","action","payload","portfolioSagas","_getPortfolio","takeLatest","console","log","call","axios","get","res","put","data","response","rootSaga","all","fork","sagaMiddleware","createSagaMiddleware","store","createStore","compose","applyMiddleware","run","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6da3c5f8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport './Header.scss';\n\nconst Header = (props) => {\n\treturn (\n\t\t<div className=\"header\">\n\t\t\t<div className=\"section\">\n\t\t\t\t<p className=\"text-button text-button--selected\">Dashboard</p>\n\t\t\t</div>\n\t\t\t<div className=\"section\">\n\t\t\t\t<p className=\"text-button\">History</p>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Header;","export const PORTFOLIO_ACTION = {\n  // GET PORTFOLIO\n  GET_PORTFOLIO: \"PORTFOLIO_ACTION:GET_PORTFOLIO\",\n  SUCCESS_GET_PORTFOLIO: \"PORTFOLIO_ACTION:SUCCESS_GET_PORTFOLIO\",\n  ERROR_GET_PORTFOLIO: \"PORTFOLIO_ACTION:ERROR_GET_PORTFOLIO\",\n}\n\nexport const getPortfolio = () => {\n  return { type: PORTFOLIO_ACTION.GET_PORTFOLIO }\n}","export default __webpack_public_path__ + \"static/media/ethereum.9270fc02.svg\";","export default __webpack_public_path__ + \"static/media/bitcoin.c9f33461.svg\";","export default __webpack_public_path__ + \"static/media/cardano.a194df52.svg\";","import axios from 'axios';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../../components/Header/Header';\nimport \"../../css/container.scss\";\nimport \"../../css/fonts.scss\";\nimport { getPortfolio } from '../../redux/Portfolio/portfolioAction';\nimport ethereum from '../../img/ethereum.svg';\nimport bitcoin from '../../img/bitcoin.svg';\nimport cardano from '../../img/cardano.svg';\nimport moment from 'moment';\n\nlet formatter = new Intl.NumberFormat('en-US', {\n\tstyle: 'currency',\n\tcurrency: 'USD'\n})\n\nconst DashboardPage = (props) => {\n\tconst {\n\t\t// REDUCER STATE\n\t\tloadingPortfolio,\n\t\tportfolio,\n\t\t\n\t\t// DISPATCH ACTION\n\t\tgetPortfolio\n\t} = props;\n\t\n\tuseEffect(() => {\n\t\tgetPortfolio();\n\t}, []);\n\t\n\tconst _getUnit = (ticker) => {\n\t\tconst crypto_tickers = [\"BTC\", \"ETH\", \"ADA\"];\n\t\t\n\t\tif (crypto_tickers.includes(ticker)) {\n\t\t\treturn ticker;\n\t\t}\n\t\t\n\t\treturn \"\";\n\t}\n\t\n\tconst _getIcon = (ticker) => {\n\t\tif (ticker === \"BTC\") {\n\t\t\treturn <img src={bitcoin} className=\"crypto-icon\"/>;\n\t\t} else if (ticker === 'ETH') {\n\t\t\treturn <img src={ethereum} className=\"crypto-icon\"/>;\n\t\t} else if (ticker === 'ADA') {\n\t\t\treturn <img src={cardano} className=\"crypto-icon\"/>;\n\t\t}\n\t\treturn null;\n\t}\n\t\n\treturn (\n\t\t<div className=\"center-h\">\n\t\t\t<Header />\n\t\t\t<div className=\"container\">\n\t\t\t<div className=\"inner-container inner-container-header\">\n\t\t\t\t<div className=\"section\">\n\t\t\t\t\t<div className=\"side-by-side-container center-v\">\n\t\t\t\t\t\t<div className=\"\">\n\t\t\t\t\t\t\t<p>Portfolio</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"right\">\n\t\t\t\t\t\t\t<p className=\"small-text secondary-text\">retrieved at {moment(portfolio.timestamp).format('hh:mm A')}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"side-by-side-container border\">\n\t\t\t\t\t\t<div className=\"section\">\n\t\t\t\t\t\t\t<p>{formatter.format(portfolio.networth)}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"section\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"section\">\n\t\t\t\t\t<div className=\"side-by-side-container\">\n\t\t\t\t\t\t<div className=\"\">\n\t\t\t\t\t\t\t<p>Assets</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"right\">\n\t\t\t\t\t\t\t<p></p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"border\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div className=\"section space-between\">\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<p className=\"large-text\">Name</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<p className=\"large-text\">Balance</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<p className=\"large-text\">Price</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"right\">\n\t\t\t\t\t\t\t\t<p></p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"separator\"/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tportfolio.holdings.map((asset, index) => \n\t\t\t\t\t\t\t<div key={`asset-${index}`}>\n\t\t\t\t\t\t\t\t<div className=\"section space-between\">\n\t\t\t\t\t\t\t\t\t<div className=\"horizontal\">\n\t\t\t\t\t\t\t\t\t\t{_getIcon(asset.ticker)}\n\t\t\t\t\t\t\t\t\t\t<p className=\"large-text\" style={{marginRight: '10px'}}>{asset.name}</p>\n\t\t\t\t\t\t\t\t\t\t<p className=\"medium-text secondary-text\">{asset.ticker}</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"horizontal\">\n\t\t\t\t\t\t\t\t\t\t<p className=\"large-text\" style={{marginRight: '10px'}}>{asset.total} {_getUnit(asset.ticker)}</p>\n\t\t\t\t\t\t\t\t\t\t<p className=\"medium-text secondary-text\">â‰ˆ {formatter.format(asset.value)}</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<p className=\"large-text\">{formatter.format(asset.price)}</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"right\">\n\t\t\t\t\t\t\t\t\t<p></p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tindex !== portfolio.holdings.length - 1 &&\n\t\t\t\t\t\t\t\t\t<div style={{ paddingRight: '20px', paddingLeft: '20px' }}>\n\t\t\t\t\t\t\t\t\t\t<div className=\"separator\"/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t)\n\t}\n\t\n\tconst mapStateToProps = (state) => {\n\t\treturn {...state.portfolio}\n\t}\n\t\n\tconst mapDispatchToProps = (dispatch) => {\n\t\treturn {\n\t\t\tgetPortfolio: () => {\n\t\t\t\tdispatch(getPortfolio())\n\t\t\t}\n\t\t}\n\t}\n\t\n\texport default connect(\n\t\tmapStateToProps,\n\t\tmapDispatchToProps\n\t\t) (DashboardPage);","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport DashboardPage from '../screens/Dashboard/Dashboard';\n\nconst Routes = () => {\n    return (\n        <Switch>\n          <Route path=\"/dashboard\" component={DashboardPage} />\n        </Switch>\n    )\n}\n\nexport default Routes;","import { PORTFOLIO_ACTION } from \"./portfolioAction\"\n\nconst initial_portfolio = {\n  holdings: [],\n  timestamp: 0,\n  networth: 0,\n  stocks_portfolio: 0,\n  cryptocurrencies: 0,\n  etf: 0\n}\n\nconst initialState = {\n  // GET PORTFOLIO\n  loadingPortfolio: false,\n  portfolio: initial_portfolio\n}\n\nexport const portfolioReducer = (state = initialState, action = { type: \"\", payload: null }) => {\n  switch (action.type) {\n    // GET PORTFOLIO\n    case PORTFOLIO_ACTION.GET_PORTFOLIO:\n      return {...state, loadingPortfolio: true}\n    case PORTFOLIO_ACTION.SUCCESS_GET_PORTFOLIO:\n      return {...state, loadingPortfolio: false, portfolio: action.payload}\n    case PORTFOLIO_ACTION.ERROR_GET_PORTFOLIO:\n      return {...state, loadingPortfolio: false, portfolio: initial_portfolio}\n\n    default:\n      return {...state}\n  }\n}","import { combineReducers } from \"redux\";\nimport { portfolioReducer } from \"./Portfolio/portfolioReducer\";\n\nexport const rootReducer = combineReducers({\n  portfolio: portfolioReducer\n})","import axios from 'axios';\nimport { takeLatest, put, call } from 'redux-saga/effects';\nimport { PORTFOLIO_ACTION } from './portfolioAction';\n\nexport function* portfolioSagas() {\n  yield takeLatest(PORTFOLIO_ACTION.GET_PORTFOLIO, _getPortfolio);\n}\n\nfunction* _getPortfolio() {\n  try {\n    console.log('Getting portfolio value...');\n    let res = yield call(axios.get, \"http://localhost:9000/portfolio\");\n\n    if (res) {\n      console.log(res);\n      yield put({ type: PORTFOLIO_ACTION.SUCCESS_GET_PORTFOLIO, payload: res.data })\n    }\n  } catch (e) {\n    console.log(e);\n    console.log(e.response);\n    yield put({ type: PORTFOLIO_ACTION.ERROR_GET_PORTFOLIO })\n  }\n}","import { all } from \"@redux-saga/core/effects\";\nimport { fork } from \"redux-saga/effects\";\nimport { portfolioSagas } from \"./Portfolio/portfolioSagas\";\n\nexport function* rootSaga() {\n  yield all([\n    fork(portfolioSagas)\n  ])\n}","import { applyMiddleware, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { rootReducer } from './reducer';\nimport { rootSaga } from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(\n      sagaMiddleware\n    )\n  )\n)\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;","import logo from './logo.svg';\nimport React from 'react';\nimport { Switch, Route, Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './App.css';\nimport DashboardPage from './screens/Dashboard/Dashboard';\nimport history from './services/history';\nimport Routes from './services/routes';\nimport './css/preset.scss';\nimport store from './redux/store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router history={history}>\n        <Routes />\n      </Router>\n    </Provider>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}